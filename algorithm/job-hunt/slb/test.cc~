/**
 * @file test.cc
 * @brief 
 * @author L.J.SHOU shoulinjun@126.com
 * @version 0.1.00
 * @date 2014-10-11
 */

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define MAX 1000
#define LEN 20
void Input (char *a, char *b, char *c){
   printf ("Input sentence:"); gets(a);
    printf ("the word to be replaced:");gets(b);
     printf ("the new word:");gets(c);
}
void Swap (char *str, char *FindWord, char *SwapWord){
   int j,s,k,i=0,SwapWordLength,strLength,FindWordLength,n; 
    char *p1,*p2;
     p1=str; 
      p2=FindWord; 
       strLength=strlen(str);     //length of the original sentence
        FindWordLength=strlen(FindWord); //length of the old word 
         SwapWordLength=strlen(SwapWord); //length of the new word 
          n=SwapWordLength-FindWordLength; 
           while(*p1!='\0'){
                if((*p1==*p2)&&(!isalpha(*(p1-1)))) //isalpha : judge whether the char_c is an english word or not,if yes return !0,if no return 0
                     while((*p1==*p2)&&(*p2!='\0')) 
                          { p1++; p2++; i++; }   //i: record how many chars has been read
                  else { p1++; i++; } 
                    if((*p2=='\0')&&(isalpha(*p1)==0)){ 
                        //find the old word in the sentence 
                        //   if(n<0){ 
                        //       j=i-FindWordLength;  //j: beginning place
                        //           for(k=0; k<SwapWordLength; k++) 
                        //                str[j++]=SwapWord[k]; //str[j++]==str[j], j++
                        //                    for(s=i; s<strLength; s++) 
                        //                         str[j++]=str[s]; 
                        //                             while(j<strLength) 
                        //                                  str[j++]='\0'; 
                        //                                      strLength=strlen(str); 
                        //                                          i+=n; 
                        //                                              p1+=n; 
                        //                                                 } 
                        //                                                    else 
                        //                                                       { 
                        //                                                           for(s=strLength+n; s>i; s--) 
                        //                                                                str[s]=str[strLength--]; //str[strLength--]==str[strLength],strLength--
                        //                                                                    j=i-FindWordLength; 
                        //                                                                        for(k=0; k<SwapWordLength; k++) 
                        //                                                                             str[j++]=SwapWord[k]; 
                        //                                                                                 strLength=strlen(str); 
                        //                                                                                     i+=n; 
                        //                                                                                         p1+=n; 
                        //                                                                                            } 
                        //                                                                                              } 
                        //                                                                                                p2=FindWord; 
                        //                                                                                                 } 
                        //                                                                                                 } 
                        //                                                                                                 void main(){
                        //                                                                                                  char sen[MAX],old[LEN],new[LEN];
                        //                                                                                                   Input(sen,old,new);
                        //                                                                                                    Swap(sen,old,new);
                        //                                                                                                     printf ("Now the new sentence is:\n");
                        //                                                                                                      puts(sen);
                        //                                                                                                      }
